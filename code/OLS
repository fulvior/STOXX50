import pandas as pd
import numpy as np
import statsmodels.api as sm
from sklearn.utils import resample
import matplotlib.pyplot as plt


df = pd.read_excel(r'C:\Users\WZHFURA\Desktop\EURO_STOXX_BL.xlsx', sheet_name='Sheet1')

post_return_cols = ['rt+1', 'rt+2', 'rt+3', 'rt+4', 'rt+5', 'rt+6', 'rt+7']
df['vol_post'] = df[post_return_cols].std(axis=1)

df['PosMinusNeg'] = df['Positive'] - df['Negative']
X = sm.add_constant(df[['PosMinusNeg']])
y = df['vol_post']
model = sm.OLS(y, X).fit()

print(model.summary())


n_boot = 1000
boot_betas = []

for _ in range(n_boot):
    boot_df = resample(df)
    X_boot = sm.add_constant(boot_df['PosMinusNeg'])
    y_boot = boot_df['vol_post']
    model_boot = sm.OLS(y_boot, X_boot).fit()
    boot_betas.append(model_boot.params['PosMinusNeg'])


ci_lower = np.percentile(boot_betas, 2.5)
ci_upper = np.percentile(boot_betas, 97.5)
print(f"Bootstrapped 95% CI for beta (tone): [{ci_lower:.4f}, {ci_upper:.4f}]")


plt.hist(boot_betas, bins=30, edgecolor='k')
plt.axvline(ci_lower, color='red', linestyle='--', label='95% CI Lower')
plt.axvline(ci_upper, color='red', linestyle='--', label='95% CI Upper')
plt.axvline(np.mean(boot_betas), color='blue', linestyle='-', label='Mean Beta')
plt.title("Bootstrapped Beta Coefficient (Tone)")
plt.xlabel("Beta")
plt.ylabel("Frequency")
plt.legend()
plt.tight_layout()
plt.show()
